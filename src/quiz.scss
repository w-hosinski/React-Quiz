@use "./variables.scss";

@mixin onHover {
    &:hover {
        border: 3px solid black;
    }   
}

body {
    margin: 0;
    background-color: #4A90E2;
}

.container {
    width: 100vw;
    height: 100vh;
    font-size: 1.5625em;
}

.container {
    display: grid; 
    grid-template-columns: repeat(10,1fr);
    grid-template-rows: repeat(19,1fr);
    gap: 10px 10px; 
    grid-template-areas: 
    ". . . . . . . . . ."
    ". . . . . . . . . ."
    ". joker1 . infoDisplay infoDisplay infoDisplay ladder ladder ladder ."
    ". joker1 . infoDisplay infoDisplay infoDisplay ladder ladder ladder ."
    ". joker2 . infoDisplay infoDisplay infoDisplay ladder ladder ladder ."
    ". joker2 . infoDisplay infoDisplay infoDisplay ladder ladder ladder ."
    ". joker3 . infoDisplay infoDisplay infoDisplay ladder ladder ladder ."
    ". joker3 . infoDisplay infoDisplay infoDisplay ladder ladder ladder ."
    ". . . infoDisplay infoDisplay infoDisplay . . . ."
    ". . . infoDisplay infoDisplay infoDisplay . . . ."
    ". . . infoDisplay infoDisplay infoDisplay . . . ."
    ". . . infoDisplay infoDisplay infoDisplay . . . ."
    ". . . . lockIn lockIn . . . ."
    ". question question question question question question question question ."
    ". question question question question question question question question ."
    ". answer1 answer1 answer1 answer1 answer2 answer2 answer2 answer2 ."
    ". answer3 answer3 answer3 answer3 answer4 answer4 answer4 answer4 ."
    ". . . . . . . . . ."
    ". . . . . . . . . ."; 
  }

.answer {
    font-size: 1em;
    background-color: variables.$selectorColor;
    color: variables.$defaultTextColor;
    border: variables.$thinBorder;
    border-radius: 10000px;
    text-indent: 1em;
    @include onHover();
}

#answer1 {
    grid-area: answer1;
}

#answer2 {
    grid-area: answer2;
}

#answer3 {
    grid-area: answer3;
}

#answer4 {
    grid-area: answer4;
}

#joker1 {
    grid-area: joker1;
}

#joker2 {
    grid-area: joker2;
} 

#joker3 {
    grid-area: joker3;
}

.lockIn {
    font-size: 1em;
    grid-area: lockIn;
    background-color: green;
    border-radius: 10000px;
    color: variables.$defaultTextColor;
    border: variables.$thinBorder;
}

.question {
    background-color: variables.$selectorColor;
    color: variables.$defaultTextColor;
    font-size: 2em;
    font-weight: bold;
    grid-area: question;
    text-align: center;
    overflow: hidden;
    resize: none;
    border: variables.$thickBorder;
    border-radius: 10000px;
}

.next-question {
    background-color: blue;
    font-size: 1em;
    color: variables.$defaultTextColor;
    grid-area: lockIn;
    border: variables.$thinBorder;
    border-radius: 10000px;
}

.restart {
    background-color: blue;
    color: variables.$defaultTextColor;
    grid-area: lockIn;
    font-size: 1em;
    border: variables.$thinBorder;
    border-radius: 10000px;
}

.btn {
    background-color: variables.$selectorColor;
    color: variables.$defaultTextColor;
    border: variables.$thickBorder;
    border-radius: 100%;
    font-size: 1em;
    @include onHover();
}

.btn-used {
    background-color: #4A90E2;
    border: 1px #e0e0e0 solid;
    color: #e0e0e0;
}

.answer:focus {
    background-color: orange;
    color: black;
}

.answer-correct {
    animation: answer-correct-anim steps(1, end);
    animation-iteration-count: 4;
    animation-duration: 0.667s;
    color: black;
    background-color: green;
}

.answer-wrong {
    background-color: orange;
    color: black;
}

.answer-corrected {
    animation: answer-wrong-anim steps(1, end);
    animation-iteration-count: 5;
    animation-duration: 0.667s;
    color: white;
    background-color: green;
}

.hidden-btn {
    visibility:hidden;
}

.ladder {
    width: 100%;
    max-height: 100%;
    grid-area: ladder;
}

.winnerScreen {
    grid-area: infoDisplay;
    animation: winner-anim steps(1, end);
    animation-iteration-count: infinite;
    animation-duration: 0.667s;
    font-weight: bolder;
    color: green;
    text-shadow: black 0px 0px 2px;
}

@keyframes answer-correct-anim {
    0% {
        background-color: green;
    }
    50% {
        background-color: orange;
    }
    100% {
        background-color: green;
    }
}

@keyframes answer-wrong-anim {
    0% {
        background-color: green;
    }
    50% {
        background-color: variables.$selectorColor;
    }
    100% {
        background-color: green;
    }
}

@keyframes winner-anim {
    0% {
        color: green;
    }
    50% {
        color: orange;
    }
    100% {
        color: green;
    }
}